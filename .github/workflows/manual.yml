name: Publish

on:
    workflow_dispatch:
        inputs:
            releaseType:
                description: 'Release Type'
                required: true
                type: choice
                default: 'patch'
                options:
                    - patch
                    - minor
                    - major
            releaseChannel:
                description: 'Release Channel'
                required: true
                type: choice
                default: stable
                options:
                    - stable
                    - edge
            publishMarketplace:
                description: 'Publish on Visual Studio Marketplace?'
                required: true
                type: choice
                default: 'yes'
                options:
                    - 'yes'
                    - 'no'
            publishOpenVSX:
                description: 'Publish on Open VSX Registry?'
                required: true
                type: choice
                default: 'yes'
                options:
                    - 'yes'
                    - 'no'

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
            - name: Clone Repository
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Setup Node version
              uses: actions/setup-node@v3
              with:
                  node-version: 16.x
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci
              env:
                NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Check style and format
              run: npm run lint
            - name: Test package
              uses: coactions/setup-xvfb@v1
              with:
                  run: npm test

            - name: Setup Git
              run: |
                  git config --global user.name "LongNguyen"
                  git config --global user.email "nguyenngoclong@live.com"

            - name: Get Current Version Number
              run: |
                  CURRENT_VERSION=$(cat package.json | jq .version | cut -d'"' -f 2)
                  echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

            - name: Bump New Version (Edge)
              if: ${{ github.event.inputs.releaseChannel == 'edge' && !contains(env.CURRENT_VERSION, 'edge') }}
              run: |
                  RELEASE_VERSION=$(npx semver $CURRENT_VERSION -i pre${{ github.event.inputs.releaseType }} --preid edge)
                  echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
                  echo "Bump to $RELEASE_VERSION"
              
            - name: Bump New Version (Edge)
              if: ${{ github.event.inputs.releaseChannel == 'edge' && contains(env.CURRENT_VERSION, 'edge') }}
              run: |
                  RELEASE_VERSION=$(npx semver $CURRENT_VERSION -i prerelease)
                  echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
                  echo "Bump to $RELEASE_VERSION"

            - name: Bump New Version (Stable)
              if: ${{ github.event.inputs.releaseChannel == 'stable' }}
              run: |
                  RELEASE_VERSION=$(npx semver $CURRENT_VERSION -i github.event.inputs.releaseType)
                  echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV
                  echo "Bump to $RELEASE_VERSION"

            - name: Version Package
              run: |
                  npm version $RELEASE_VERSION
                  git tag -a $RELEASE_VERSION -m "$RELEASE_VERSION"

            - name: Publish to Visual Studio Marketplace (Edge)
              if: ${{ github.event.inputs.publishMarketplace == 'yes' && github.event.inputs.releaseChannel == 'edge' }}  
              uses: HaaLeo/publish-vscode-extension@v1
              with:
                preRelease: true
                pat: ${{ secrets.VSCE_PAT }}
                registryUrl: https://marketplace.visualstudio.com
            - name: Publish to Visual Studio Marketplace (Stable)
              if: ${{ github.event.inputs.publishMarketplace == 'yes' && github.event.inputs.releaseChannel == 'stable' }}
              uses: HaaLeo/publish-vscode-extension@v1
              with:
                preRelease: false
                pat: ${{ secrets.VSCE_PAT }}
                registryUrl: https://marketplace.visualstudio.com

            - name: Publish to Open VSX Registry (Edge)
              if: ${{ github.event.inputs.publishOpenVSX == 'yes' && github.event.inputs.releaseChannel == 'edge' }}
              uses: HaaLeo/publish-vscode-extension@v1
              with:
                  preRelease: true
                  pat: ${{ secrets.OPEN_VSX_TOKEN }}
            - name: Publish to Open VSX Registry (Stable)
              if: ${{ github.event.inputs.publishOpenVSX == 'yes' && github.event.inputs.releaseChannel == 'stable' }}
              uses: HaaLeo/publish-vscode-extension@v1
              with:
                  preRelease: false
                  pat: ${{ secrets.OPEN_VSX_TOKEN }}

            - name: Push Tags
              run: |
                  git log -1 --stat
                  git push origin main --tags
            - run: |
                  export GIT_TAG=$(git describe --tags --abbrev=0)
                  echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV

            - name: GitHub Release
              uses: ncipollo/release-action@v1
              with:
                  artifacts: './*.tgz'
                  bodyFile: CHANGELOG.md
                  tag: ${{ env.GIT_TAG }}
                  prerelease: ${{ github.event.inputs.releaseChannel == 'edge' }}
